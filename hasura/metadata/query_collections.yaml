- name: allowed-queries
  definition:
    queries:
      - name: addToCart
        query: |
          mutation addToCart ($user_id: uuid!, $menu_id: uuid!, $restaurant_id: uuid!, $restaurant_name: String!, $restaurant_image_id: String!, $quantity: Int!, $price: float8!, $total: float8!) {
            insert_cart(objects: [{user_id:$user_id,menu_id:$menu_id,restaurant_id:$restaurant_id,restaurant_name:$restaurant_name,restaurant_image_id:$restaurant_image_id,quantity:$quantity,price:$price,total:$total}]) {
              returning {
                id
                menu {
                  name
                  id
                  image_id
                  veg
                }
                price
                quantity
                total
              }
            }
          }
      - name: addUser
        query: |
          mutation addUser ($id: uuid!, $auth_id: String!, $lastname: String!, $firstname: String!) {
            insert_user(objects: {auth_id:$auth_id,lastname:$lastname,id:$id,firstname:$firstname}) {
              affected_rows
            }
          }
      - name: getRestraunts
        query: |
          query getRestraunts {
            restaurants {
              id
              image_id
              name
              rating
              price
              delivery_time
              veg
              promoted
              restraunt_cuisines {
                cuisine {
                  name
                }
              }
            }
          }
      - name: updateCartById
        query: |
          mutation updateCartById ($cartId: uuid!, $quantity: Int!, $total: float8!) {
            update_cart_by_pk(pk_columns: {id:$cartId}, _set: {quantity:$quantity,total:$total}) {
              id
              quantity
              total
            }
          }
      - name: clearCart
        query: |
          mutation clearCart ($userId: uuid!) {
            delete_cart(where: {user_id:{_eq:$userId}}) {
              affected_rows
            }
          }
      - name: getCartItems
        query: |
          query getCartItems {
            cart {
              id
              restaurant_id
              restaurant_name
              restaurant_image_id
              menu {
                name
                id
                image_id
                veg
              }
              price
              quantity
              total
            }
          }
      - name: getUser
        query: |
          query getUser {
            user {
              id
            }
          }
      - name: getRestraunt
        query: |
          query getRestraunt ($id: uuid!) {
            restaurants_by_pk(id: $id) {
              id
              image_id
              name
              area
              rating
              price
              delivery_time
              veg
              promoted
              total_rating
              restraunt_cuisines {
                cuisine {
                  name
                }
              }
              restaurant_menus {
                menu {
                  id
                  name
                  image_id
                  price
                  veg
                }
              }
              restaurant_offers {
                offer {
                  id
                  description
                  coupon_code
                }
              }
              restaurant_widgets {
                widget {
                  id
                  name
                  widget_menus {
                    menu {
                      image_id
                      name
                      price
                      veg
                    }
                    id
                  }
                }
              }
            }
          }
      - name: addNewAddress
        query: |
          mutation addNewAddress ($addressType: String!, $houseName: String!, $locality: String!, $city: String!, $state: String!, $pincode: bigint!, $isPrimary: Boolean!, $userId: uuid!) {
            insert_addresses(objects: {address_type:$addressType,address_line_1:$houseName,address_line_2:$locality,city:$city,state:$state,pincode:$pincode,primary:$isPrimary,user_id:$userId}) {
              affected_rows
            }
          }
      - name: getAddresses
        query: |
          query getAddresses ($userId: uuid) {
            addresses(where: {user_id:{_eq:$userId}}) {
              address_line_1
              address_line_2
              address_type
              city
              id
              pincode
              primary
              state
            }
          }
      - name: deleteCartById
        query: |
          mutation deleteCartById ($cartId: uuid!) {
            delete_cart_by_pk(id: $cartId) {
              id
            }
          }
      - name: updateAddress
        query: |
          mutation updateAddress ($addressId: uuid!, $addressType: String!, $houseName: String!, $locality: String!, $city: String!, $state: String!, $pincode: bigint!, $isPrimary: Boolean!) {
            update_addresses_by_pk(pk_columns: {id:$addressId}, _set: {address_line_1:$houseName,address_line_2:$locality,address_type:$addressType,city:$city,pincode:$pincode,primary:$isPrimary,state:$state}) {
              address_line_1
              address_line_2
              address_type
              city
              id
              pincode
              primary
              state
            }
          }
      - name: insertOrderItems
        query: |
          mutation createOrderItems ($orderItems: [order_items_insert_input!]!) {
            insert_order_items(objects: $orderItems) {
              affected_rows
            }
          }
      - name: createOrder
        query: |
          mutation createOrder ($payment_id: String, $total: float8, $user_id: uuid, $restaurant_id: uuid) {
            insert_order_details(objects: {payment_id:$payment_id,total:$total,user_id:$user_id,restaurant_id:$restaurant_id}) {
              returning {
                id
              }
            }
          }
      - name: addToFavourites
        query: |
          mutation addToFavourites ($restaurant_id: uuid!, $userId: uuid!) {
            insert_favourites_one(object: {restaurant_id:$restaurant_id,user_id:$userId}) {
              id
            }
          }
      - name: getAllFavourites
        query: |
          query getAllFavourites {
            favourites {
              id
              restaurant {
                id
                image_id
                name
                rating
                price
                delivery_time
                veg
                promoted
                restraunt_cuisines {
                  cuisine {
                    name
                  }
                }
              }
            }
          }
      - name: removeFavourite
        query: |
          mutation removeFavourite ($favouriteId: uuid!) {
            delete_favourites_by_pk(id: $favouriteId) {
              id
            }
          }
      - name: getStatistics
        query: |
          query getStatistics {
            foodvilla_statistics {
              metric_name
              metric_value
            }
          }
      - name: getAllOrders
        query: |
          query getAllOrders {
            order_details {
              id
              total
              created_at
              order_state
              restaurant {
                id
                name
                image_id
                area
              }
              order_items {
                id
                product_id
                quantity
                menu {
                  id
                  name
                  price
                }
              }
            }
          }
      - name: updateOrderState
        query: |
          mutation updateOrderState ($order_id: uuid!, $order_state: order_state_enum!) {
            response: update_order_details_by_pk(pk_columns: {id:$order_id}, _set: {order_state:$order_state}) {
              id
            }
          }
      - name: graphStatistics
        query: |
          query graphStatistics {
            foodvilla_graph_Stats: orders_sales_by_time(order_by: {created_at:asc}) {
              orders_count
              sales_count
              created_at
            }
          }
